apply plugin: 'com.android.library'
apply plugin: 'realm-android'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'jacoco'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion
    resourcePrefix 'realm_browser_'

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.gitCommitCount
        versionName project.gitTag
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    // This enables long timeouts required on slow environments, e.g. Travis
    adbOptions {
        timeOutInMs 10 * 60 * 1000 // 10 minutes
        installOptions "-d", "-t"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$project.supportLibVersion"
    compile "com.android.support:recyclerview-v7:$project.supportLibVersion"
    compile "com.android.support:design:$project.supportLibVersion"
    compile "com.android.support:support-annotations:$project.supportLibVersion"
    compile "com.jakewharton.timber:timber:$project.timberVersion"
    testCompile "junit:junit:4.12"
    androidTestCompile "junit:junit:4.12"
    androidTestCompile "com.android.support:support-annotations:$project.supportLibVersion"
    androidTestCompile "com.android.support.test:runner:0.5"
    androidTestCompile "com.android.support.test:rules:0.5"
    //    androidTestApt "io.realm:realm-annotations:$project.realmVersion"
    //    androidTestApt "io.realm:realm-annotations-processor:$project.realmVersion"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: ["jacoco/testDebugUnitTest.exec",
                                                          "outputs/code-coverage/connected/*coverage.ec"])
}

apply from: rootProject.file('publish.gradle')